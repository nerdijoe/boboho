function printMessage(message) {
  $('#messages').append(message + "<br>");
  $('#messages').scrollTop($('#messages')[0].scrollHeight);
}


$(function() {
    var chatChannel;
    var username;

    function setupChannel() {
        chatChannel.join().then(function(channel) {
            printMessage(username + ' joined the chat.');
        });

        chatChannel.on('messageAdded', function(message) {
            printMessage(message.author + ": " + message.body);
         });
    }

    var channel_name = 'chat<%= params[:user_id] %>';

    $.post("/tokens", function(data) {
        username = data.username;
        var accessManager = new Twilio.AccessManager(data.token);
        var messagingClient = new Twilio.IPMessaging.Client(accessManager);

        messagingClient.getChannelByUniqueName(channel_name).then(function(channel) {
            if (channel) {
                chatChannel = channel;
                setupChannel();
            } else {
                messagingClient.createChannel({
                    uniqueName: channel_name,
                    friendlyName: 'Chat Channel' })
                .then(function(channel) {
                    chatChannel = channel;
                    setupChannel();

                });
            }

            document.getElementById('startChat').style.display = 'none'
        });
    });


    var $input = $('#chat-input');
    $input.on('keydown', function(e) {
        if (e.keyCode == 13) {
            chatChannel.sendMessage($input.val())
            $input.val('');
        }
     });

});
